{"version":3,"sources":["components/Logo/Logo.js","components/Navigation/Navigation.js","components/ImageForm/ImageForm.js","components/Rank/Rank.js","components/FaceRecog/FaceRecog.js","components/Footer/Footer.js","components/Signin/Signin.js","components/SignUp/SignUp.js","App.js","serviceWorker.js","index.js"],"names":["Logo","className","options","max","style","height","width","icon","faSmileWink","size","Navigation","onRouteChange","isSignedIn","display","justifyContent","alignItems","onClick","ImageForm","onInputChange","onButSubmit","type","onChange","Rank","name","entries","FaceRecog","imgUrl","box","bbComps","map","bBox","i","key","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","id","src","alt","Footer","faReact","faNodeJs","Signin","props","onEmailChange","e","setState","signInEmail","target","value","onPassChange","signInPass","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","loadUser","message","this","htmlFor","React","Component","SignUp","onNameChange","onSubmitSignUp","particleOpt","particles","color","links","number","density","enable","value_area","initialState","input","route","joined","App","data","calcFaceLocation","image","document","getElementById","Number","outputs","regions","bbObject","region_info","bounding_box","left_col","top_row","right_col","bottom_row","displayFaceBox","count","Object","assign","catch","console","log","err","params","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.7338d087.chunk.js","sourcesContent":["import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSmileWink } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <div className='ma3 mt0'>\r\n      <Tilt className=\"Tilt\" options={{ max : 25 }} style={{ height: 50, width: 270 }} >\r\n        <div className=\"Tilt-inner\">\r\n          <h1><FontAwesomeIcon icon={faSmileWink} size='lg'/> Face Detector</h1>\r\n        </div>\r\n      </Tilt>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport Logo from '../Logo/Logo';\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n    if(isSignedIn) {\r\n      return (\r\n        <nav style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center'}}>\r\n          <Logo />\r\n          <p\r\n            onClick={() => onRouteChange('signout')} \r\n            className='f4 link dim black underline pa3 pointer'>\r\n            Sign Out\r\n          </p>\r\n        </nav>\r\n      );\r\n    }\r\n    else {\r\n      return (\r\n        <nav style={{display: 'flex', justifyContent: 'flex-start', alignItems: 'center'}}>\r\n          <Logo />\r\n        </nav>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\n\r\nconst ImageForm = ({ onInputChange, onButSubmit }) => {\r\n  return (\r\n    <div className='ma5 br3 shadow-2 pa2'>\r\n      <p className='f3 tc fw6'>\r\n        {'Detect Faces in Your Pictures. Enter URL of the Image to Get Started'}\r\n      </p>\r\n      <div className='flex flex-wrap mb4'>\r\n        <input className='f4 pa2 w-70 center' type='text' onChange={onInputChange}/>\r\n        <button className='w-30 f4 link pv2 dib white bg-black pointer' onClick={onButSubmit}>Detect</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageForm;","import React from 'react';\r\n\r\nconst Rank = ({ name, entries }) => {\r\n  return (\r\n    <div className='tc ma3'>\r\n      <div className='black f3'>\r\n        {`${name}, your current entry count is:`}\r\n      </div>\r\n      <div className='black f1'>\r\n        {entries}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\nimport './FaceRecog.css';\r\n\r\nconst FaceRecog = ({ imgUrl, box, isSignedIn }) => {\r\n  const bbComps = box.map((bBox, i) => {\r\n    return (\r\n      <div\r\n        key={i}\r\n        style={{top: bBox.topRow, right: bBox.rightCol, bottom: bBox.bottomRow, left: bBox.leftCol}}className='bounding_box'>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className='center ma'>\r\n      <div className='absolute mt2'>\r\n        <img id='target' src={imgUrl} alt='Input' width='500px' height='auto'/>\r\n        {/* <div \r\n        style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}className='bounding_box'>\r\n        </div> */}\r\n        {bbComps}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FaceRecog;\r\n\r\n//https://source.unsplash.com/500x900/?people-dancing\r\n\r\n// center ma","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faReact, faNodeJs } from '@fortawesome/free-brands-svg-icons';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className='w-100 bg-navy'>\r\n      <p className='pv1 tracked f5 white'>Created with &#x2764; by Dinesh Sadhwani using <FontAwesomeIcon icon={faReact} className='f5'/> and <FontAwesomeIcon icon={faNodeJs} className='f5'/></p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport Footer from '../Footer/Footer';\r\n\r\nclass Signin extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      signInEmail: '',\r\n      signInPass: '',\r\n      message: ''\r\n    }\r\n  }\r\n\r\n  onEmailChange = (e) => {\r\n    this.setState({signInEmail: e.target.value});\r\n  }\r\n\r\n  onPassChange = (e) => {\r\n    this.setState({signInPass: e.target.value});\r\n  }\r\n\r\n  onSubmitSignIn = () => {\r\n    fetch('https://sheltered-beyond-43188.herokuapp.com/signin', {\r\n      method: 'POST',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        email: this.state.signInEmail,\r\n        password: this.state.signInPass\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(user => {\r\n        if(user.id) {\r\n          this.props.loadUser(user);\r\n          this.props.onRouteChange('home');\r\n        } else {\r\n          this.setState({message: `Hmmm..Seems like you've got the wrong credentials`})\r\n        }\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { onRouteChange } = this.props; \r\n    return (\r\n      <div>\r\n          <article className=\"br3 ba b--black-10 mv4 mv5-ns mv5-m w-100 w-50-m w-25-l mw6 shadow-3 center\">\r\n          <main className=\"pa4 black-80\">\r\n            <form className=\"measure\">\r\n              <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                <legend className=\"f3 fw7 ph0 mh0\">Sign In</legend>\r\n                <div className=\"mt4\">\r\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                  <input \r\n                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                    type=\"email\" \r\n                    name=\"email-address\" \r\n                    id=\"email-address\"\r\n                    onChange={this.onEmailChange} />\r\n                </div>\r\n                <div className=\"mv3\">\r\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                  <input \r\n                    className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" \r\n                    name=\"password\"  \r\n                    id=\"password\"\r\n                    onChange={this.onPassChange} />\r\n                </div>\r\n              </fieldset>\r\n              <div className=\"\">\r\n                <input\r\n                  onClick={this.onSubmitSignIn} \r\n                  className=\"b ph3 pv2 input-reset ba b--black bg-transparent pointer hover-bg-black hover-white f6 dib\" \r\n                  type=\"button\" \r\n                  value=\"Sign in\" />\r\n              </div>\r\n              <div className=\"lh-copy mt3\">\r\n                <p\r\n                  onClick={() => onRouteChange('signup')}  \r\n                  className=\"underline f5 link fw5 dim black db pointer\">Don't Have an Account? Sign Up for Free</p>\r\n              </div>\r\n            </form>\r\n            <p className='fw6 ma0 mt2 dark-red'>{this.state.message}</p>\r\n          </main>\r\n        </article>\r\n        <Footer />\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default Signin;","import React from 'react';\r\nimport Footer from '../Footer/Footer';\r\n\r\n\r\nclass SignUp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      name: ''\r\n    }\r\n  }\r\n\r\n  onNameChange = (e) => {\r\n    this.setState({name: e.target.value});\r\n  }\r\n\r\n  onEmailChange = (e) => {\r\n    this.setState({email: e.target.value});\r\n  }\r\n\r\n  onPassChange = (e) => {\r\n    this.setState({password: e.target.value});\r\n  }\r\n\r\n  onSubmitSignUp = () => {\r\n    fetch('https://sheltered-beyond-43188.herokuapp.com/register', {\r\n      method: 'POST',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        name: this.state.name,\r\n        email: this.state.email,\r\n        password: this.state.password\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(user => {\r\n        if(user.id) {\r\n          this.props.loadUser(user)\r\n          this.props.onRouteChange('home');\r\n        }\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { onRouteChange } = this.props;\r\n    return (\r\n      <div>\r\n          <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-3 center\">\r\n          <main className=\"pa4 black-80\">\r\n            <form className=\"measure\">\r\n              <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                <p className='underline pointer' onClick={() => onRouteChange('signin')}>Already have an Account? Sign in!</p>\r\n                <legend className=\"f3 fw7 ph0 mh0\">Sign Up</legend>\r\n                <div className=\"mv4\">\r\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n                  <input \r\n                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                    type=\"text\" \r\n                    name=\"name\"  \r\n                    id=\"name\"\r\n                    onChange={this.onNameChange} />\r\n                </div>\r\n                <div className=\"mv4\">\r\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                  <input \r\n                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                    type=\"email\" \r\n                    name=\"email-address\" \r\n                    id=\"email-address\" \r\n                    onChange={this.onEmailChange}/>\r\n                </div>\r\n                <div className=\"mv3\">\r\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                  <input \r\n                    className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" \r\n                    name=\"password\" \r\n                    id=\"password\"\r\n                    onChange = {this.onPassChange} />\r\n                </div>\r\n              </fieldset>\r\n              <div className=\"\">\r\n                <input\r\n                  onClick={this.onSubmitSignUp} \r\n                  className=\"b ph3 pv2 input-reset ba b--black bg-transparent pointer hover-bg-black hover-white f6 dib\" \r\n                  type=\"button\" \r\n                  value=\"Let's Get Started\" />\r\n              </div>\r\n            </form>\r\n          </main>\r\n        </article>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUp;","import React from 'react';\r\nimport './App.css';\r\n// import Logo from './components/Logo/Logo';\r\nimport Navigation from './components/Navigation/Navigation';\r\nimport ImageForm from './components/ImageForm/ImageForm';\r\nimport Rank from './components/Rank/Rank';\r\nimport Particles from 'react-particles-js';\r\nimport FaceRecog from './components/FaceRecog/FaceRecog';\r\nimport Signin from './components/Signin/Signin';\r\nimport Signup from './components/SignUp/SignUp';\r\n\r\nconst particleOpt = {\r\n  particles: {\r\n    color: {\r\n      value: '#000000',\r\n    },\r\n    links: {\r\n      color: \"#000000\",\r\n    },\r\n    number: {\r\n      value: 30,\r\n      density: {\r\n        enable: true,\r\n        value_area: 800\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst initialState = {\r\n    input: '',\r\n    imgUrl: '',\r\n    box: [],\r\n    route: 'signin',\r\n    isSignedIn: false,\r\n    user: {\r\n      id: '',\r\n      name: '',\r\n      email: '',\r\n      entries: 0,\r\n      joined: ''\r\n    }\r\n};\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = initialState;\r\n  }\r\n\r\n  loadUser = (data) => {\r\n    this.setState({\r\n      user: {\r\n        id: data.id,\r\n        name: data.name,\r\n        email: data.email,\r\n        entries: data.entries,\r\n        joined: data.joined\r\n      }\r\n    });\r\n  }\r\n\r\n  calcFaceLocation = (data) => {\r\n    const image = document.getElementById('target');\r\n    const width = Number(image.width);\r\n    const height = Number(image.height);\r\n    const clarFace = data.outputs[0].data.regions.map((bbObject) => {\r\n      return {\r\n        leftCol: bbObject.region_info.bounding_box.left_col * width,\r\n        topRow: bbObject.region_info.bounding_box.top_row * height,\r\n        rightCol: width - (bbObject.region_info.bounding_box.right_col * width),\r\n        bottomRow: height - (bbObject.region_info.bounding_box.bottom_row * height)\r\n      }\r\n    });\r\n    // console.log(width, height);\r\n    // console.log(clarFace);\r\n    // return {\r\n    //   leftCol: clarFace.left_col * width,\r\n    //   topRow: clarFace.top_row * height,\r\n    //   rightCol: width - (clarFace.right_col * width),\r\n    //   bottomRow: height - (clarFace.bottom_row * height),\r\n    // }\r\n    return clarFace;\r\n  }\r\n\r\n  displayFaceBox = (box) => {\r\n    // console.log(box);\r\n    this.setState({box: box});\r\n  }\r\n\r\n  onInputChange = (e) => {\r\n    this.setState({input: e.target.value});\r\n  }\r\n\r\n  onButSubmit = () => {\r\n    this.setState({imgUrl: this.state.input})\r\n      fetch('https://sheltered-beyond-43188.herokuapp.com/imageurl', {\r\n          method: 'POST',\r\n          headers: {'Content-Type': 'application/json'},\r\n          body: JSON.stringify({\r\n            input: this.state.input\r\n        })\r\n      })\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        if(response === 'Empty I/P field') {\r\n          return;\r\n        } else {\r\n            fetch('https://sheltered-beyond-43188.herokuapp.com/image', {\r\n              method: 'PUT',\r\n              headers: {'Content-Type': 'application/json'},\r\n              body: JSON.stringify({\r\n                id: this.state.user.id\r\n              })\r\n            })\r\n            .then(response => response.json())\r\n            .then(count => {\r\n              this.setState(Object.assign(this.state.user, { entries: count }));\r\n            })\r\n            .catch(console.log);\r\n        }\r\n        this.displayFaceBox(this.calcFaceLocation(response))\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  onRouteChange = (route) => {\r\n    this.setState({route: route});\r\n    if(route === 'signout') {\r\n      this.setState(initialState);\r\n    } else if (route === 'home') {\r\n      this.setState({isSignedIn: true});\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isSignedIn, box, imgUrl, route } = this.state;\r\n    let image;\r\n    if (imgUrl !== '') {\r\n      image = <FaceRecog box={box} imgUrl={imgUrl} />;\r\n    }\r\n    else {\r\n      image = '';\r\n    }\r\n    return (\r\n      <div className=\"App\">\r\n        <Particles className='particles' params={particleOpt} />\r\n        <Navigation \r\n          isSignedIn={isSignedIn}\r\n          onRouteChange={this.onRouteChange}/>\r\n        {route === 'home'\r\n        ? <div className='h-100'>\r\n            <Rank name={this.state.user.name} entries={this.state.user.entries}/>\r\n            <ImageForm onInputChange={this.onInputChange} onButSubmit={this.onButSubmit}/>\r\n            {image}\r\n          </div> \r\n        : (\r\n            ((route === 'signin' || route === 'signout') && !isSignedIn)\r\n            ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\r\n            : <Signup loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}